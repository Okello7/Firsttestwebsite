/*

    padding, the space around the content. In the example below, it is the space around the paragraph text.
    border, the solid line that is just outside the padding.
    margin, the space around the outside of the border.
    width (of an element).
    background-color, the color behind an element's content and padding.
    color, the color of an element's content (usually text).
    text-shadow sets a drop shadow on the text inside an element.
    display sets the display mode of an element. (keep reading to learn more)

*/


html{
    font-size: 10px;
    font-family: 'Shantell Sans', cursive;
    background-color: antiquewhite;
}

body {
    width: 600px;
    margin: 0 auto;
    background-color: #ff9500;
    padding: 0 20px 20px 20px;
    border: 5px solid black;
  }
  
  /*
  
    width: 600px; This forces the body to always be 600 pixels wide.
    margin: 0 auto; When you set two values on a property like margin or padding, the first value affects the element's top and bottom side (setting it to 0 in this case); the second value affects the left and right side. (Here, auto is a special value that divides the available horizontal space evenly between left and right). You can also use one, two, three, or four values, as documented in Margin Syntax.
    background-color: #FF9500; This sets the element's background color. This project uses a reddish orange for the body background color, as opposed to dark blue for the <html> element. (Feel free to experiment.)
    padding: 0 20px 20px 20px; This sets four values for padding. The goal is to put some space around the content. In this example, there is no padding on the top of the body, and 20 pixels on the right, bottom and left. The values set top, right, bottom, left, in that order. As with margin, you can use one, two, three, or four values, as documented in Padding Syntax.
    border: 5px solid black; This sets values for the width, style and color of the border. In this case, it's a five-pixelâ€“wide, solid black border, on all sides of the body.

  */

h1 {
    margin: 0;
    padding: 20px 0;
    color: #00539f;
    text-shadow: 3px 3px 1px black;
    font-size: 60px;
    text-align: center;
  }
  
  /*
  You may have noticed there's a horrible gap at the top of the body. That happens because browsers apply default styling to the h1 element (among others). That might seem like a bad idea, but the intent is to provide basic readability for unstyled pages. To eliminate the gap, we overwrite the browser's default styling with the setting margin: 0;.

Next, we set the heading's top and bottom padding to 20 pixels.

Following that, we set the heading text to be the same color as the HTML background color.

Finally, text-shadow applies a shadow to the text content of the element. Its four values are:

    The first pixel value sets the horizontal offset of the shadow from the text: how far it moves across.
    The second pixel value sets the vertical offset of the shadow from the text: how far it moves down.
    The third pixel value sets the blur radius of the shadow. A larger value produces a more fuzzy-looking shadow.
    The fourth value sets the base color of the shadow.

  */

p, li {
    font-size: 16px;
    line-height: 2;
    letter-spacing: 1px;
  }
  

#my-id {
    color: blueviolet;
   /* background: #000;*/
}

.editor-note {
    color: rgb(3, 31, 31);
    /*background-color: black;*/
}

ul {
    width: 450px;
}

img {
    display: block;
    margin: 0 auto;
    width: 600px;
}

/*
The <body> is a block element, meaning it takes up space on the page. The margin applied to a block element will be respected by other elements on the page.
In contrast, images are inline elements, for the auto margin trick to work on this image, we must give it block-level behavior using display: block;
*/

/*img[src = "images/testtech.jpg"] {
    
}*/

a:hover {
    color: crimson;
}

